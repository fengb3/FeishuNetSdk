// <auto-generated />


using FeishuNetSdk.FeishuEvent.V2;

namespace FeishuNetSdk.FeishuEvent.V2.Contact.Scope
{
    /// <summary>
    /// 通讯录权限范围变更<br/>
    /// 当应用通讯录范围权限发生变更时，订阅这个事件的应用会收到事件。<br/>
    /// </summary>
    /// <事件类型> contact.scope.updated_v3 </事件类型>
    /// <事件版本> V2.0 </事件版本>
    /// <自建应用> 支持 </自建应用>
    /// <商店应用> 支持 </商店应用>
    /// <文档链接> <a href="https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/scope/events/updated">在open.feishu.cn中查看</a> </文档链接>
    /// <权限要求>
    /// <ul>
    /// <li> 获取通讯录基本信息 </li>
    /// <li> 以应用身份读取通讯录 </li>
    /// <li> 以应用身份访问通讯录 (历史版本) </li>
    /// </ul>
    /// </权限要求>
    /// <字段权限要求>
    /// <ul>
    /// <li> 以应用身份读取通讯录 </li>
    /// <li> 获取部门基础信息 </li>
    /// <li> 获取通讯录部门组织架构信息 </li>
    /// <li> 查询用户席位信息 </li>
    /// <li> 获取用户基本信息 </li>
    /// <li> 获取用户组织架构信息 </li>
    /// <li> 获取成员所在部门路径 </li>
    /// <li> 获取用户受雇信息 </li>
    /// <li> 查看成员工号 </li>
    /// <li> 获取用户性别 </li>
    /// <li> 分配用户席位 (仅自建应用) </li>
    /// <li> 获取用户 user ID (仅自建应用) </li>
    /// <li> 获取用户手机号 (仅自建应用) </li>
    /// <li> 获取用户邮箱信息 (仅自建应用) </li>
    /// <li> 查询用户所属的工作序列 (仅自建应用) </li>
    /// <li> 查询用户职级 (仅自建应用) </li>
    /// <li> 以应用身份访问通讯录 (历史版本) </li>
    /// <li> 读取通讯录 (历史版本) </li>
    /// </ul>
    /// </字段权限要求>
    public class UpdatedV3 : EventContext<UpdatedV3.EventData>
    {
        // EventData|added:scope|departments:department|name:string||i18n_name:department_i18n_name|zh_cn:string||ja_jp:string||en_us:string||parent_department_id:string||department_id:string||open_department_id:string||leader_user_id:string||chat_id:string||order:string||unit_ids:string||member_count:int||status:department_status|is_deleted:boolean||leaders:departmentLeader|leaderType:int||leaderID:string||group_chat_employee_types:int||primary_member_count:int||users:user|union_id:string||user_id:string||open_id:string||name:string||en_name:string||nickname:string||email:string||mobile:string||gender:int||avatar:avatar_info|avatar_72:string||avatar_240:string||avatar_640:string||avatar_origin:string||status:user_status|is_frozen:boolean||is_resigned:boolean||is_activated:boolean||is_exited:boolean||is_unjoin:boolean||leader_user_id:string||city:string||country:string||work_station:string||join_time:int||employee_no:string||employee_type:int||custom_attrs:user_custom_attr|type:string||id:string||value:user_custom_attr_value|text:string||url:string||pc_url:string||option_id:string||option_value:string||name:string||picture_url:string||generic_user:custom_attr_generic_user|id:string||type:int||enterprise_email:string||job_title:string||is_frozen:boolean||job_level_id:string||job_family_id:string||subscription_ids:string||assign_info:user_assign_info|subscription_id:string||license_plan_key:string||product_name:string||i18n_name:product_i18n_name|zh_cn:string||ja_jp:string||en_us:string||start_time:string||end_time:string||department_path:department_detail|department_id:string||department_name:department_path_name|name:string||i18n_name:department_i18n_name|zh_cn:string||ja_jp:string||en_us:string||department_path:department_path|department_ids:string||department_path_name:department_path_name|name:string||i18n_name:department_i18n_name|zh_cn:string||ja_jp:string||en_us:string||user_groups:user_group|user_group_id:string||name:string||type:int||member_count:int||status:int||removed:scope|departments:department|name:string||i18n_name:department_i18n_name|zh_cn:string||ja_jp:string||en_us:string||parent_department_id:string||department_id:string||open_department_id:string||leader_user_id:string||chat_id:string||order:string||unit_ids:string||member_count:int||status:department_status|is_deleted:boolean||leaders:departmentLeader|leaderType:int||leaderID:string||group_chat_employee_types:int||primary_member_count:int||users:user|union_id:string||user_id:string||open_id:string||name:string||en_name:string||nickname:string||email:string||mobile:string||gender:int||avatar:avatar_info|avatar_72:string||avatar_240:string||avatar_640:string||avatar_origin:string||status:user_status|is_frozen:boolean||is_resigned:boolean||is_activated:boolean||is_exited:boolean||is_unjoin:boolean||leader_user_id:string||city:string||country:string||work_station:string||join_time:int||employee_no:string||employee_type:int||custom_attrs:user_custom_attr|type:string||id:string||value:user_custom_attr_value|text:string||url:string||pc_url:string||option_id:string||option_value:string||name:string||picture_url:string||generic_user:custom_attr_generic_user|id:string||type:int||enterprise_email:string||job_title:string||is_frozen:boolean||job_level_id:string||job_family_id:string||subscription_ids:string||assign_info:user_assign_info|subscription_id:string||license_plan_key:string||product_name:string||i18n_name:product_i18n_name|zh_cn:string||ja_jp:string||en_us:string||start_time:string||end_time:string||department_path:department_detail|department_id:string||department_name:department_path_name|name:string||i18n_name:department_i18n_name|zh_cn:string||ja_jp:string||en_us:string||department_path:department_path|department_ids:string||department_path_name:department_path_name|name:string||i18n_name:department_i18n_name|zh_cn:string||ja_jp:string||en_us:string||user_groups:user_group|user_group_id:string||name:string||type:int||member_count:int||status:int|
        public class EventData
        {
            	
            /// <summary>
            /// 当通讯录范围权限变更时，新增的对象
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("added")]
            public Scope Added { get; init; }

            	
            /// <summary>
            /// 当通讯录范围权限发生变更时，移除的对象
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("removed")]
            public Scope Removed { get; init; }
        }

        // scope|departments:department|name:string||i18n_name:department_i18n_name|zh_cn:string||ja_jp:string||en_us:string||parent_department_id:string||department_id:string||open_department_id:string||leader_user_id:string||chat_id:string||order:string||unit_ids:string||member_count:int||status:department_status|is_deleted:boolean||leaders:departmentLeader|leaderType:int||leaderID:string||group_chat_employee_types:int||primary_member_count:int||users:user|union_id:string||user_id:string||open_id:string||name:string||en_name:string||nickname:string||email:string||mobile:string||gender:int||avatar:avatar_info|avatar_72:string||avatar_240:string||avatar_640:string||avatar_origin:string||status:user_status|is_frozen:boolean||is_resigned:boolean||is_activated:boolean||is_exited:boolean||is_unjoin:boolean||leader_user_id:string||city:string||country:string||work_station:string||join_time:int||employee_no:string||employee_type:int||custom_attrs:user_custom_attr|type:string||id:string||value:user_custom_attr_value|text:string||url:string||pc_url:string||option_id:string||option_value:string||name:string||picture_url:string||generic_user:custom_attr_generic_user|id:string||type:int||enterprise_email:string||job_title:string||is_frozen:boolean||job_level_id:string||job_family_id:string||subscription_ids:string||assign_info:user_assign_info|subscription_id:string||license_plan_key:string||product_name:string||i18n_name:product_i18n_name|zh_cn:string||ja_jp:string||en_us:string||start_time:string||end_time:string||department_path:department_detail|department_id:string||department_name:department_path_name|name:string||i18n_name:department_i18n_name|zh_cn:string||ja_jp:string||en_us:string||department_path:department_path|department_ids:string||department_path_name:department_path_name|name:string||i18n_name:department_i18n_name|zh_cn:string||ja_jp:string||en_us:string||user_groups:user_group|user_group_id:string||name:string||type:int||member_count:int||status:int|
        public class Scope
        {
            	
            /// <summary>
            /// 部门对象
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("departments")]
            public Department[] Departments { get; init; }

            	
            /// <summary>
            /// 用户对象
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("users")]
            public User[] Users { get; init; }

            	
            /// <summary>
            /// 用户组对象
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("user_groups")]
            public UserGroup[] UserGroups { get; init; }
        }

        // department|name:string||i18n_name:department_i18n_name|zh_cn:string||ja_jp:string||en_us:string||parent_department_id:string||department_id:string||open_department_id:string||leader_user_id:string||chat_id:string||order:string||unit_ids:string||member_count:int||status:department_status|is_deleted:boolean||leaders:departmentLeader|leaderType:int||leaderID:string||group_chat_employee_types:int||primary_member_count:int|
        public class Department
        {
            	
            /// <summary>
            /// 部门名称
            /// 注意：不可包含斜杠
            /// 数据校验规则：
            /// 最小长度：1 字符
            /// 字段权限要求（满足任一）：
            /// 以应用身份读取通讯录
            /// 获取部门基础信息
            /// 以应用身份访问通讯录历史版本
            /// 读取通讯录历史版本
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("name")]
            public string Name { get; init; }

            	
            /// <summary>
            /// 国际化的部门名称
            /// 注意：不可包含斜杠
            /// 字段权限要求（满足任一）：
            /// 以应用身份读取通讯录
            /// 获取部门基础信息
            /// 以应用身份访问通讯录历史版本
            /// 读取通讯录历史版本
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("i18n_name")]
            public DepartmentI18nName I18nName { get; init; }

            	
            /// <summary>
            /// 父部门的ID
            /// 在根部门下创建新部门，该参数值为 “0”
            /// 字段权限要求（满足任一）：
            /// 以应用身份读取通讯录
            /// 获取通讯录部门组织架构信息
            /// 以应用身份访问通讯录历史版本
            /// 读取通讯录历史版本
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("parent_department_id")]
            public string ParentDepartmentId { get; init; }

            	
            /// <summary>
            /// 本部门的自定义部门ID
            /// 注意：除需要满足正则规则外，同时不能以od-开头
            /// 数据校验规则：
            /// 最大长度：64 字符正则校验：^[a-zA-Z0-9][a-zA-Z0-9_\-@.]{0,63}$
            /// 字段权限要求（满足任一）：
            /// 以应用身份读取通讯录
            /// 获取部门基础信息
            /// 以应用身份访问通讯录历史版本
            /// 读取通讯录历史版本
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("department_id")]
            public string DepartmentId { get; init; }

            	
            /// <summary>
            /// 部门的open_id，类型与通过请求的查询参数传入的department_id_type相同
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("open_department_id")]
            public string OpenDepartmentId { get; init; }

            	
            /// <summary>
            /// 部门主管用户ID
            /// 字段权限要求（满足任一）：
            /// 以应用身份读取通讯录
            /// 获取通讯录部门组织架构信息
            /// 以应用身份访问通讯录历史版本
            /// 读取通讯录历史版本
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("leader_user_id")]
            public string LeaderUserId { get; init; }

            	
            /// <summary>
            /// 部门群ID
            /// 字段权限要求（满足任一）：
            /// 以应用身份读取通讯录
            /// 获取部门基础信息
            /// 以应用身份访问通讯录历史版本
            /// 读取通讯录历史版本
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("chat_id")]
            public string ChatId { get; init; }

            	
            /// <summary>
            /// 部门的排序，即部门在其同级部门的展示顺序
            /// 字段权限要求（满足任一）：
            /// 以应用身份读取通讯录
            /// 获取通讯录部门组织架构信息
            /// 以应用身份访问通讯录历史版本
            /// 读取通讯录历史版本
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("order")]
            public string Order { get; init; }

            	
            /// <summary>
            /// 部门单位自定义ID列表，当前只支持一个
            /// 字段权限要求（满足任一）：
            /// 以应用身份读取通讯录
            /// 获取通讯录部门组织架构信息
            /// 以应用身份访问通讯录历史版本
            /// 读取通讯录历史版本
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("unit_ids")]
            public string[] UnitIds { get; init; }

            	
            /// <summary>
            /// 部门下用户的个数
            /// 字段权限要求（满足任一）：
            /// 以应用身份读取通讯录
            /// 获取通讯录部门组织架构信息
            /// 以应用身份访问通讯录历史版本
            /// 读取通讯录历史版本
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("member_count")]
            public int MemberCount { get; init; }

            	
            /// <summary>
            /// 部门状态
            /// 字段权限要求（满足任一）：
            /// 以应用身份读取通讯录
            /// 获取部门基础信息
            /// 以应用身份访问通讯录历史版本
            /// 读取通讯录历史版本
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("status")]
            public DepartmentStatus Status { get; init; }

            	
            /// <summary>
            /// 部门负责人
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("leaders")]
            public DepartmentLeader[] Leaders { get; init; }

            	
            /// <summary>
            /// 部门群雇员类型限制。[]空列表时，表示为无任何雇员类型。类型字段可包含以下值，支持多个类型值；若有多个，用英文','分隔：1、正式员工2、实习生3、外包4、劳务5、顾问6、其他自定义类型字段，可通过下方接口获取到该租户的自定义员工类型的名称，参见获取人员类型。
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("group_chat_employee_types")]
            public int[] GroupChatEmployeeTypes { get; init; }

            	
            /// <summary>
            /// 部门下主属用户的个数
            /// 字段权限要求（满足任一）：
            /// 以应用身份读取通讯录
            /// 获取通讯录部门组织架构信息
            /// 以应用身份访问通讯录历史版本
            /// 读取通讯录历史版本
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("primary_member_count")]
            public int PrimaryMemberCount { get; init; }
        }

        // department_i18n_name|zh_cn:string||ja_jp:string||en_us:string|
        public class DepartmentI18nName
        {
            	
            /// <summary>
            /// 部门的中文名
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("zh_cn")]
            public string ZhCn { get; init; }

            	
            /// <summary>
            /// 部门的日文名
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("ja_jp")]
            public string JaJp { get; init; }

            	
            /// <summary>
            /// 部门的英文名
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("en_us")]
            public string EnUs { get; init; }
        }

        // department_status|is_deleted:boolean|
        public class DepartmentStatus
        {
            	
            /// <summary>
            /// 是否被删除
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("is_deleted")]
            public bool IsDeleted { get; init; }
        }

        // departmentLeader|leaderType:int||leaderID:string|
        public class DepartmentLeader
        {
            	
            /// <summary>
            /// 负责人类型
            /// 可选值有：
            /// 1：主负责人2：副负责人
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("leaderType")]
            public int LeaderType { get; init; }

            	
            /// <summary>
            /// 负责人ID
            /// 字段权限要求（满足任一）：
            /// 以应用身份读取通讯录
            /// 获取通讯录部门组织架构信息
            /// 以应用身份访问通讯录历史版本
            /// 读取通讯录历史版本
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("leaderID")]
            public string LeaderID { get; init; }
        }

        // user|union_id:string||user_id:string||open_id:string||name:string||en_name:string||nickname:string||email:string||mobile:string||gender:int||avatar:avatar_info|avatar_72:string||avatar_240:string||avatar_640:string||avatar_origin:string||status:user_status|is_frozen:boolean||is_resigned:boolean||is_activated:boolean||is_exited:boolean||is_unjoin:boolean||leader_user_id:string||city:string||country:string||work_station:string||join_time:int||employee_no:string||employee_type:int||custom_attrs:user_custom_attr|type:string||id:string||value:user_custom_attr_value|text:string||url:string||pc_url:string||option_id:string||option_value:string||name:string||picture_url:string||generic_user:custom_attr_generic_user|id:string||type:int||enterprise_email:string||job_title:string||is_frozen:boolean||job_level_id:string||job_family_id:string||subscription_ids:string||assign_info:user_assign_info|subscription_id:string||license_plan_key:string||product_name:string||i18n_name:product_i18n_name|zh_cn:string||ja_jp:string||en_us:string||start_time:string||end_time:string||department_path:department_detail|department_id:string||department_name:department_path_name|name:string||i18n_name:department_i18n_name|zh_cn:string||ja_jp:string||en_us:string||department_path:department_path|department_ids:string||department_path_name:department_path_name|name:string||i18n_name:department_i18n_name|zh_cn:string||ja_jp:string||en_us:string|
        public class User
        {
            	
            /// <summary>
            /// 用户的union_id，应用开发商发布的不同应用中同一用户的标识，不同ID的说明参见 用户相关的 ID 概念
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("union_id")]
            public string UnionId { get; init; }

            	
            /// <summary>
            /// 用户的user_id，租户内用户的唯一标识，不同ID的说明参见 用户相关的 ID 概念
            /// 字段权限要求：
            /// 获取用户 user ID仅自建应用
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("user_id")]
            public string UserId { get; init; }

            	
            /// <summary>
            /// 用户的open_id，应用内用户的唯一标识，不同ID的说明参见 用户相关的 ID 概念
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("open_id")]
            public string OpenId { get; init; }

            	
            /// <summary>
            /// 用户名
            /// 数据校验规则：
            /// 最小长度：1 字符
            /// 字段权限要求（满足任一）：
            /// 以应用身份读取通讯录
            /// 获取用户基本信息
            /// 以应用身份访问通讯录历史版本
            /// 读取通讯录历史版本
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("name")]
            public string Name { get; init; }

            	
            /// <summary>
            /// 英文名
            /// 字段权限要求（满足任一）：
            /// 以应用身份读取通讯录
            /// 获取用户基本信息
            /// 以应用身份访问通讯录历史版本
            /// 读取通讯录历史版本
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("en_name")]
            public string EnName { get; init; }

            	
            /// <summary>
            /// 别名
            /// 字段权限要求（满足任一）：
            /// 以应用身份读取通讯录
            /// 获取用户基本信息
            /// 以应用身份访问通讯录历史版本
            /// 读取通讯录历史版本
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("nickname")]
            public string Nickname { get; init; }

            	
            /// <summary>
            /// 邮箱
            /// 注意：
            /// 非中国大陆手机号成员必须同时添加邮箱邮箱不可重复
            /// 字段权限要求：
            /// 获取用户邮箱信息仅自建应用
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("email")]
            public string Email { get; init; }

            	
            /// <summary>
            /// 手机号
            /// 注意：
            /// 在本企业内不可重复未认证企业仅支持添加中国大陆手机号，通过飞书认证的企业允许添加海外手机号国际电话区号前缀中必须包含加号 +该 mobile 字段在海外版飞书非必填
            /// 字段权限要求：
            /// 获取用户手机号仅自建应用
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("mobile")]
            public string Mobile { get; init; }

            	
            /// <summary>
            /// 性别
            /// 可选值有：
            /// 0：保密1：男2：女
            /// 字段权限要求（满足任一）：
            /// 以应用身份读取通讯录
            /// 获取用户性别
            /// 以应用身份访问通讯录历史版本
            /// 读取通讯录历史版本
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("gender")]
            public int Gender { get; init; }

            	
            /// <summary>
            /// 用户头像信息
            /// 字段权限要求（满足任一）：
            /// 以应用身份读取通讯录
            /// 获取用户基本信息
            /// 以应用身份访问通讯录历史版本
            /// 读取通讯录历史版本
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("avatar")]
            public AvatarInfo Avatar { get; init; }

            	
            /// <summary>
            /// 用户状态，枚举类型，包括is_frozen、is_resigned、is_activated、is_exited 。
            /// 用户状态转移参见：用户状态图
            /// 字段权限要求（满足任一）：
            /// 以应用身份读取通讯录
            /// 获取用户受雇信息
            /// 以应用身份访问通讯录历史版本
            /// 读取通讯录历史版本
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("status")]
            public UserStatus Status { get; init; }

            	
            /// <summary>
            /// 用户的直接主管的用户ID，ID值与查询参数中的user_id_type 对应。
            /// 不同 ID 的说明参见 用户相关的 ID 概念
            /// 获取方式参见如何获取user_id
            /// 字段权限要求（满足任一）：
            /// 以应用身份读取通讯录
            /// 获取用户组织架构信息
            /// 以应用身份访问通讯录历史版本
            /// 读取通讯录历史版本
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("leader_user_id")]
            public string LeaderUserId { get; init; }

            	
            /// <summary>
            /// 工作城市
            /// 字段权限要求（满足任一）：
            /// 以应用身份读取通讯录
            /// 获取用户受雇信息
            /// 以应用身份访问通讯录历史版本
            /// 读取通讯录历史版本
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("city")]
            public string City { get; init; }

            	
            /// <summary>
            /// 国家或地区Code缩写，具体写入格式请参考 国家/地区码表
            /// 字段权限要求（满足任一）：
            /// 以应用身份读取通讯录
            /// 获取用户受雇信息
            /// 以应用身份访问通讯录历史版本
            /// 读取通讯录历史版本
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("country")]
            public string Country { get; init; }

            	
            /// <summary>
            /// 工位
            /// 字段权限要求（满足任一）：
            /// 以应用身份读取通讯录
            /// 获取用户受雇信息
            /// 以应用身份访问通讯录历史版本
            /// 读取通讯录历史版本
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("work_station")]
            public string WorkStation { get; init; }

            	
            /// <summary>
            /// 入职时间，时间戳格式，表示从1970年1月1日开始所经过的秒数
            /// 字段权限要求（满足任一）：
            /// 以应用身份读取通讯录
            /// 获取用户受雇信息
            /// 以应用身份访问通讯录历史版本
            /// 读取通讯录历史版本
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("join_time")]
            public int JoinTime { get; init; }

            	
            /// <summary>
            /// 工号
            /// 字段权限要求（满足任一）：
            /// 获取用户受雇信息
            /// 查看成员工号
            /// 以应用身份读取通讯录
            /// 以应用身份访问通讯录历史版本
            /// 读取通讯录历史版本
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("employee_no")]
            public string EmployeeNo { get; init; }

            	
            /// <summary>
            /// 员工类型，可选值有：
            /// 1：正式员工2：实习生3：外包4：劳务5：顾问同时可读取到自定义员工类型的 int 值，可通过下方接口获取到该租户的自定义员工类型的名称，参见获取人员类型
            /// 字段权限要求（满足任一）：
            /// 以应用身份读取通讯录
            /// 获取用户受雇信息
            /// 以应用身份访问通讯录历史版本
            /// 读取通讯录历史版本
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("employee_type")]
            public int EmployeeType { get; init; }

            	
            /// <summary>
            /// 自定义字段，请确保你的组织管理员已在管理后台/组织架构/成员字段管理/自定义字段管理/全局设置中开启了“允许开放平台 API 调用“，否则该字段不会生效/返回。
            /// 更多详情参见用户接口相关问题
            /// 字段权限要求（满足任一）：
            /// 以应用身份读取通讯录
            /// 获取用户受雇信息
            /// 以应用身份访问通讯录历史版本
            /// 读取通讯录历史版本
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("custom_attrs")]
            public UserCustomAttr[] CustomAttrs { get; init; }

            	
            /// <summary>
            /// 企业邮箱，请先确保已在管理后台启用飞书邮箱服务
            /// 创建用户时，企业邮箱的使用方式参见用户接口相关问题
            /// 字段权限要求（满足任一）：
            /// 以应用身份读取通讯录
            /// 获取用户受雇信息
            /// 以应用身份访问通讯录历史版本
            /// 读取通讯录历史版本
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("enterprise_email")]
            public string EnterpriseEmail { get; init; }

            	
            /// <summary>
            /// 职务
            /// 字段权限要求（满足任一）：
            /// 以应用身份读取通讯录
            /// 获取用户受雇信息
            /// 以应用身份访问通讯录历史版本
            /// 读取通讯录历史版本
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("job_title")]
            public string JobTitle { get; init; }

            	
            /// <summary>
            /// 是否暂停用户
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("is_frozen")]
            public bool IsFrozen { get; init; }

            	
            /// <summary>
            /// 职级ID
            /// 字段权限要求：
            /// 查询用户职级仅自建应用
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("job_level_id")]
            public string JobLevelId { get; init; }

            	
            /// <summary>
            /// 序列ID
            /// 字段权限要求：
            /// 查询用户所属的工作序列仅自建应用
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("job_family_id")]
            public string JobFamilyId { get; init; }

            	
            /// <summary>
            /// 分配给用户的席位ID列表，需开通“分配用户席位”权限。可通过下方接口获取到该租户的可用席位ID，参见获取企业席位信息
            /// 字段权限要求：
            /// 分配用户席位仅自建应用
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("subscription_ids")]
            public string[] SubscriptionIds { get; init; }

            	
            /// <summary>
            /// 用户席位列表
            /// 字段权限要求：
            /// 查询用户席位信息
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("assign_info")]
            public UserAssignInfo[] AssignInfo { get; init; }

            	
            /// <summary>
            /// 部门路径
            /// 字段权限要求：
            /// 获取成员所在部门路径
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("department_path")]
            public DepartmentDetail[] DepartmentPath { get; init; }
        }

        // avatar_info|avatar_72:string||avatar_240:string||avatar_640:string||avatar_origin:string|
        public class AvatarInfo
        {
            	
            /// <summary>
            /// 72*72像素头像链接
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("avatar_72")]
            public string Avatar72 { get; init; }

            	
            /// <summary>
            /// 240*240像素头像链接
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("avatar_240")]
            public string Avatar240 { get; init; }

            	
            /// <summary>
            /// 640*640像素头像链接
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("avatar_640")]
            public string Avatar640 { get; init; }

            	
            /// <summary>
            /// 原始头像链接
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("avatar_origin")]
            public string AvatarOrigin { get; init; }
        }

        // user_status|is_frozen:boolean||is_resigned:boolean||is_activated:boolean||is_exited:boolean||is_unjoin:boolean|
        public class UserStatus
        {
            	
            /// <summary>
            /// 是否暂停
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("is_frozen")]
            public bool IsFrozen { get; init; }

            	
            /// <summary>
            /// 是否离职
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("is_resigned")]
            public bool IsResigned { get; init; }

            	
            /// <summary>
            /// 是否激活
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("is_activated")]
            public bool IsActivated { get; init; }

            	
            /// <summary>
            /// 是否主动退出，主动退出一段时间后用户会自动转为已离职
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("is_exited")]
            public bool IsExited { get; init; }

            	
            /// <summary>
            /// 是否未加入，需要用户自主确认才能加入团队
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("is_unjoin")]
            public bool IsUnjoin { get; init; }
        }

        // user_custom_attr|type:string||id:string||value:user_custom_attr_value|text:string||url:string||pc_url:string||option_id:string||option_value:string||name:string||picture_url:string||generic_user:custom_attr_generic_user|id:string||type:int|
        public class UserCustomAttr
        {
            	
            /// <summary>
            /// 自定义字段类型
            /// TEXT：文本HREF：网页ENUMERATION：枚举PICTURE_ENUM：图片GENERIC_USER：用户
            /// 具体说明参见常见问题的用户接口相关问题
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("type")]
            public string Type { get; init; }

            	
            /// <summary>
            /// 自定义字段ID
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("id")]
            public string Id { get; init; }

            	
            /// <summary>
            /// 自定义字段取值
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("value")]
            public UserCustomAttrValue Value { get; init; }
        }

        // user_custom_attr_value|text:string||url:string||pc_url:string||option_id:string||option_value:string||name:string||picture_url:string||generic_user:custom_attr_generic_user|id:string||type:int|
        public class UserCustomAttrValue
        {
            	
            /// <summary>
            /// 字段类型为TEXT时该参数定义字段值，必填；字段类型为HREF时该参数定义网页标题，必填
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("text")]
            public string Text { get; init; }

            	
            /// <summary>
            /// 字段类型为 HREF 时，该参数定义默认 URL，例如手机端跳转小程序，PC端跳转网页
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("url")]
            public string Url { get; init; }

            	
            /// <summary>
            /// 字段类型为 HREF 时，该参数定义PC端 URL
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("pc_url")]
            public string PcUrl { get; init; }

            	
            /// <summary>
            /// 字段类型为 ENUMERATION 或 PICTURE_ENUM 时，该参数定义选项值
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("option_id")]
            public string OptionId { get; init; }

            	
            /// <summary>
            /// 选项类型的值。
            /// 表示 成员详情/自定义字段 中选项选中的值
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("option_value")]
            public string OptionValue { get; init; }

            	
            /// <summary>
            /// 选项类型为图片时，表示图片的名称
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("name")]
            public string Name { get; init; }

            	
            /// <summary>
            /// 图片链接
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("picture_url")]
            public string PictureUrl { get; init; }

            	
            /// <summary>
            /// 字段类型为 GENERIC_USER 时，该参数定义引用人员
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("generic_user")]
            public CustomAttrGenericUser GenericUser { get; init; }
        }

        // custom_attr_generic_user|id:string||type:int|
        public class CustomAttrGenericUser
        {
            	
            /// <summary>
            /// 用户的user_id ，具体参见用户相关的 ID 概念
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("id")]
            public string Id { get; init; }

            	
            /// <summary>
            /// 用户类型:1：用户
            /// 目前固定为1，表示用户类型
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("type")]
            public int Type { get; init; }
        }

        // user_assign_info|subscription_id:string||license_plan_key:string||product_name:string||i18n_name:product_i18n_name|zh_cn:string||ja_jp:string||en_us:string||start_time:string||end_time:string|
        public class UserAssignInfo
        {
            	
            /// <summary>
            /// 席位id
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("subscription_id")]
            public string SubscriptionId { get; init; }

            	
            /// <summary>
            /// license_plan_key
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("license_plan_key")]
            public string LicensePlanKey { get; init; }

            	
            /// <summary>
            /// 席位名称
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("product_name")]
            public string ProductName { get; init; }

            	
            /// <summary>
            /// 国际化名称
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("i18n_name")]
            public ProductI18nName I18nName { get; init; }

            	
            /// <summary>
            /// 席位起始时间
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("start_time")]
            public string StartTime { get; init; }

            	
            /// <summary>
            /// 席位结束时间
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("end_time")]
            public string EndTime { get; init; }
        }

        // product_i18n_name|zh_cn:string||ja_jp:string||en_us:string|
        public class ProductI18nName
        {
            	
            /// <summary>
            /// 席位中文名
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("zh_cn")]
            public string ZhCn { get; init; }

            	
            /// <summary>
            /// 席位日文名
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("ja_jp")]
            public string JaJp { get; init; }

            	
            /// <summary>
            /// 席位英文名
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("en_us")]
            public string EnUs { get; init; }
        }

        // department_detail|department_id:string||department_name:department_path_name|name:string||i18n_name:department_i18n_name|zh_cn:string||ja_jp:string||en_us:string||department_path:department_path|department_ids:string||department_path_name:department_path_name|name:string||i18n_name:department_i18n_name|zh_cn:string||ja_jp:string||en_us:string|
        public class DepartmentDetail
        {
            	
            /// <summary>
            /// 部门ID
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("department_id")]
            public string DepartmentId { get; init; }

            	
            /// <summary>
            /// 部门名
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("department_name")]
            public DepartmentPathName DepartmentName { get; init; }

            	
            /// <summary>
            /// 部门路径
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("department_path")]
            public DepartmentPath DepartmentPath { get; init; }
        }

        // department_path_name|name:string||i18n_name:department_i18n_name|zh_cn:string||ja_jp:string||en_us:string|
        public class DepartmentPathName
        {
            	
            /// <summary>
            /// 部门名
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("name")]
            public string Name { get; init; }

            	
            /// <summary>
            /// 部门国际化名
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("i18n_name")]
            public DepartmentI18nName I18nName { get; init; }
        }

        // department_path|department_ids:string||department_path_name:department_path_name|name:string||i18n_name:department_i18n_name|zh_cn:string||ja_jp:string||en_us:string|
        public class DepartmentPath
        {
            	
            /// <summary>
            /// 部门路径IDs
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("department_ids")]
            public string[] DepartmentIds { get; init; }

            	
            /// <summary>
            /// 部门路径名字
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("department_path_name")]
            public DepartmentPathName DepartmentPathName { get; init; }
        }

        // user_group|user_group_id:string||name:string||type:int||member_count:int||status:int|
        public class UserGroup
        {
            	
            /// <summary>
            /// 用户组的自定义ID
            /// 数据校验规则：
            /// 长度范围：1 ～ 64 字符
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("user_group_id")]
            public string UserGroupId { get; init; }

            	
            /// <summary>
            /// 用户组的名称
            /// 数据校验规则：
            /// 长度范围：1 ～ 100 字符
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("name")]
            public string Name { get; init; }

            	
            /// <summary>
            /// 用户组的类型
            /// 可选值有：
            /// 1：普通用户组2：动态用户组
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("type")]
            public int Type { get; init; }

            	
            /// <summary>
            /// 成员数量
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("member_count")]
            public int MemberCount { get; init; }

            	
            /// <summary>
            /// 用户组状态
            /// 可选值有：
            /// 0：未知1：计算完毕2：计算中3：计算失败
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("status")]
            public int Status { get; init; }
        }
    }
}