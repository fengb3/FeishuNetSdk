// <auto-generated />


using FeishuNetSdk.FeishuEvent.V2;

namespace FeishuNetSdk.FeishuEvent.V2.Corehr.JobChange
{
    /// <summary>
    /// 异动状态变更<br/>
    /// 在异动审批状态变更、异动生效时都会触发该事件，审批结果产生的场景包括撤销、审批通过、审批拒绝。<br/>
    /// </summary>
    /// <事件类型> corehr.job_change.updated_v1 </事件类型>
    /// <事件版本> V2.0 </事件版本>
    /// <自建应用> 支持 </自建应用>
    /// <商店应用> 支持 </商店应用>
    /// <文档链接> <a href="https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/job_change/events/updated">在open.feishu.cn中查看</a> </文档链接>
    /// <权限要求>
    /// <ul>
    /// <li> 获取核心人事信息 </li>
    /// <li> 获取员工异动状态变更信息 </li>
    /// <li> 获取员工异动信息 </li>
    /// <li> 读写员工异动信息 (仅自建应用) </li>
    /// <li> 获取任职信息 (仅自建应用) </li>
    /// </ul>
    /// </权限要求>
    /// <字段权限要求>
    /// <ul>
    /// <li> 获取用户 user ID (仅自建应用) </li>
    /// </ul>
    /// </字段权限要求>
    public class UpdatedV1 : EventContext<UpdatedV1.EventData>
    {
        // EventData|employment_id:string||target_user_id:user_id|union_id:string||user_id:string||open_id:string||job_change_id:string||transfer_mode:int||transfer_type_unique_identifier:string||process_id:string||effective_date:string||status:int||transfer_key:string|
        public class EventData
        {
            	
            /// <summary>
            /// 雇员ID
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("employment_id")]
            public string EmploymentId { get; init; }

            	
            /// <summary>
            /// 用户 ID
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("target_user_id")]
            public UserId TargetUserId { get; init; }

            	
            /// <summary>
            /// 异动记录 id
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("job_change_id")]
            public string JobChangeId { get; init; }

            	
            /// <summary>
            /// 异动属性/方式
            /// 可选值有：
            /// 1：直接异动：无需审批，异动状态直接为审批通过2：发起异动：需要走异动流程
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("transfer_mode")]
            public int TransferMode { get; init; }

            	
            /// <summary>
            /// 异动类型唯一标识
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("transfer_type_unique_identifier")]
            public string TransferTypeUniqueIdentifier { get; init; }

            	
            /// <summary>
            /// 异动发起后的审批流程 id，如果是直接异动，则无需要审批流程id
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("process_id")]
            public string ProcessId { get; init; }

            	
            /// <summary>
            /// 异动生效日期
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("effective_date")]
            public string EffectiveDate { get; init; }

            	
            /// <summary>
            /// 异动状态
            /// 可选值有：
            /// 1：异动发起 = 审批中状态2：已撤销3：已拒绝4：审批通过5：已生效（到了生效日期后就生效）
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("status")]
            public int Status { get; init; }

            	
            /// <summary>
            /// 异动记录标识符
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("transfer_key")]
            public string TransferKey { get; init; }
        }

        // user_id|union_id:string||user_id:string||open_id:string|
        public class UserId
        {
            	
            /// <summary>
            /// 用户的 union id
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("union_id")]
            public string UnionId { get; init; }

            	
            /// <summary>
            /// 用户的 user id
            /// 字段权限要求：
            /// 获取用户 user ID仅自建应用
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("user_id")]
            public string UserIdValue { get; init; }

            	
            /// <summary>
            /// 用户的 open id
            /// </summary>
            [global::System.Text.Json.Serialization.JsonPropertyName("open_id")]
            public string OpenId { get; init; }
        }
    }
}